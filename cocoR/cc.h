#define EOF_Sym	0	/* EOF */
#define identifierSym	1	/* identifier */
#define numberSym	2	/* number */
#define hexnumberSym	3	/* hexnumber */
#define stringD1Sym	4	/* string1 */
#define charD1Sym	5	/* char1 */
#define librarySym	6	/* library */
#define useSym	7	/* "use" */
#define PointSym	8	/* "." */
#define SemicolonSym	9	/* ";" */
#define loadSym	10	/* "load" */
#define EqualSym	11	/* "=" */
#define inheritSym	12	/* "inherit" */
#define classSym	13	/* "class" */
#define LbraceSym	14	/* "{" */
#define RbraceSym	15	/* "}" */
#define staticSym	16	/* "static" */
#define mySym	17	/* "my" */
#define functionSym	18	/* "function" */
#define objectSym	19	/* "object" */
#define varSym	20	/* "var" */
#define mixedSym	21	/* "mixed" */
#define shortSym	22	/* "short" */
#define intSym	23	/* "int" */
#define longSym	24	/* "long" */
#define floatSym	25	/* "float" */
#define unsignedSym	26	/* "unsigned" */
#define charSym	27	/* "char" */
#define doubleSym	28	/* "double" */
#define voidSym	29	/* "void" */
#define stringSym	30	/* "string" */
#define CommaSym	31	/* "," */
#define LbrackSym	32	/* "[" */
#define RbrackSym	33	/* "]" */
#define LparenSym	34	/* "(" */
#define RparenSym	35	/* ")" */
#define StarSym	36	/* "*" */
#define caseSym	37	/* "case" */
#define ColonSym	38	/* ":" */
#define defaultSym	39	/* "default" */
#define breakSym	40	/* "break" */
#define continueSym	41	/* "continue" */
#define doSym	42	/* "do" */
#define whileSym	43	/* "while" */
#define forSym	44	/* "for" */
#define ifSym	45	/* "if" */
#define elseSym	46	/* "else" */
#define returnSym	47	/* "return" */
#define switchSym	48	/* "switch" */
#define BarBarSym	49	/* "||" */
#define AndAndSym	50	/* "&&" */
#define BarSym	51	/* "|" */
#define UparrowSym	52	/* "^" */
#define AndSym	53	/* "&" */
#define EqualEqualSym	54	/* "==" */
#define BangEqualSym	55	/* "!=" */
#define LessSym	56	/* "<" */
#define GreaterSym	57	/* ">" */
#define LessEqualSym	58	/* "<=" */
#define GreaterEqualSym	59	/* ">=" */
#define LessLessSym	60	/* "<<" */
#define GreaterGreaterSym	61	/* ">>" */
#define PlusSym	62	/* "+" */
#define MinusSym	63	/* "-" */
#define SlashSym	64	/* "/" */
#define PercentSym	65	/* "%" */
#define PlusPlusSym	66	/* "++" */
#define MinusMinusSym	67	/* "--" */
#define MinusGreaterSym	68	/* "->" */
#define ColonColonSym	69	/* "::" */
#define newSym	70	/* "new" */
#define StarEqualSym	71	/* "*=" */
#define SlashEqualSym	72	/* "/=" */
#define PercentEqualSym	73	/* "%=" */
#define PlusEqualSym	74	/* "+=" */
#define MinusEqualSym	75	/* "-=" */
#define AndEqualSym	76	/* "&=" */
#define UparrowEqualSym	77	/* "^=" */
#define BarEqualSym	78	/* "|=" */
#define LessLessEqualSym	79	/* "<<=" */
#define GreaterGreaterEqualSym	80	/* ">>=" */
#define BangSym	81	/* "!" */
#define TildeSym	82	/* "~" */
#define No_Sym	83	/* not */
#define PreProcessorSym	84	/* PreProcessor */
#define MAXT	No_Sym	/* Max Terminals */
