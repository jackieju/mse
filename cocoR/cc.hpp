#define EOF_Sym	0	/* EOF */
#define identifierSym	1	/* identifier */
#define numberSym	2	/* number */
#define hexnumberSym	3	/* hexnumber */
#define stringD1Sym	4	/* string1 */
#define charD1Sym	5	/* char1 */
#define librarySym	6	/* library */
#define useSym	7	/* "use" */
#define SemicolonSym	8	/* ";" */
#define loadSym	9	/* "load" */
#define EqualSym	10	/* "=" */
#define inheritSym	11	/* "inherit" */
#define classSym	12	/* "class" */
#define LbraceSym	13	/* "{" */
#define RbraceSym	14	/* "}" */
#define staticSym	15	/* "static" */
#define mySym	16	/* "my" */
#define functionSym	17	/* "function" */
#define varSym	18	/* "var" */
#define mixedSym	19	/* "mixed" */
#define shortSym	20	/* "short" */
#define intSym	21	/* "int" */
#define longSym	22	/* "long" */
#define floatSym	23	/* "float" */
#define unsignedSym	24	/* "unsigned" */
#define charSym	25	/* "char" */
#define doubleSym	26	/* "double" */
#define voidSym	27	/* "void" */
#define stringSym	28	/* "string" */
#define CommaSym	29	/* "," */
#define LbrackSym	30	/* "[" */
#define RbrackSym	31	/* "]" */
#define LparenSym	32	/* "(" */
#define RparenSym	33	/* ")" */
#define StarSym	34	/* "*" */
#define caseSym	35	/* "case" */
#define ColonSym	36	/* ":" */
#define defaultSym	37	/* "default" */
#define breakSym	38	/* "break" */
#define continueSym	39	/* "continue" */
#define doSym	40	/* "do" */
#define whileSym	41	/* "while" */
#define forSym	42	/* "for" */
#define ifSym	43	/* "if" */
#define elseSym	44	/* "else" */
#define returnSym	45	/* "return" */
#define switchSym	46	/* "switch" */
#define BarBarSym	47	/* "||" */
#define AndAndSym	48	/* "&&" */
#define BarSym	49	/* "|" */
#define UparrowSym	50	/* "^" */
#define AndSym	51	/* "&" */
#define EqualEqualSym	52	/* "==" */
#define BangEqualSym	53	/* "!=" */
#define LessSym	54	/* "<" */
#define GreaterSym	55	/* ">" */
#define LessEqualSym	56	/* "<=" */
#define GreaterEqualSym	57	/* ">=" */
#define LessLessSym	58	/* "<<" */
#define GreaterGreaterSym	59	/* ">>" */
#define PlusSym	60	/* "+" */
#define MinusSym	61	/* "-" */
#define SlashSym	62	/* "/" */
#define PercentSym	63	/* "%" */
#define PlusPlusSym	64	/* "++" */
#define MinusMinusSym	65	/* "--" */
#define PointSym	66	/* "." */
#define MinusGreaterSym	67	/* "->" */
#define ColonColonSym	68	/* "::" */
#define newSym	69	/* "new" */
#define StarEqualSym	70	/* "*=" */
#define SlashEqualSym	71	/* "/=" */
#define PercentEqualSym	72	/* "%=" */
#define PlusEqualSym	73	/* "+=" */
#define MinusEqualSym	74	/* "-=" */
#define AndEqualSym	75	/* "&=" */
#define UparrowEqualSym	76	/* "^=" */
#define BarEqualSym	77	/* "|=" */
#define LessLessEqualSym	78	/* "<<=" */
#define GreaterGreaterEqualSym	79	/* ">>=" */
#define BangSym	80	/* "!" */
#define TildeSym	81	/* "~" */
#define No_Sym	82	/* not */
#define PreProcessorSym	83	/* PreProcessor */
#define MAXT	No_Sym	/* Max Terminals */
